{"version":3,"sources":["assets/noPosterSmall.png","Compornents/Header.js","Compornents/Section.js","Compornents/Loader.js","Compornents/StyledMixin.js","Compornents/Message.js","Compornents/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Compornents/Router.js","Compornents/GlobalStyles.js","Compornents/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","includes","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","containerStyle","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","prppTypes","PropTypes","number","isRequired","string","bool","HomePresenter","nowPlaying","upComing","popular","loading","error","Loader","map","poster_path","original_title","vote_average","release_date","key","split","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","appends_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","tvShowDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Devider","Overview","DefaultPresenter","result","original_name","backdrop_path","runtime","episode_run_time","imdb_id","genres","genre","index","overview","DetailContainer","match","push","history","parsedId","parseInt","isNaN","DetailPresenter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c052631.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n  background-color: rgba(20, 20, 20, 0.7);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${props => (props.current ? \"rgba(200, 0, 0, 1)\" : \"transparent\")};\r\n  transition: all 0.2s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 50px;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/ReactRouterTest/\" || pathname.includes(\"/movie\")}>\r\n        <SLink to=\"/ReactRouterTest/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname.includes(\"/tv\")}>\r\n        <SLink to=\"/ReactRouterTest/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/ReactRouterTest/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin: 25px 0;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  childrenL: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 50px;\r\n  margin-top: 80px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"loading\">\r\n      ⏳\r\n    </span>\r\n  </Container>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const containerStyle = styled.div`\r\n    padding: 0 20px;\r\n`\r\n\r\nexport const cellStyle = styled.div`\r\n    padding: 15px;\r\n`","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 14px;\r\n  padding: 8px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => `${props.bgUrl}`});\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  padding-top: 141.428%;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  opacity: 0;\r\n  transition: opacity 0.2s ease-out;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: flex-end;\r\n  font-size: 16px;\r\n  padding: 8px;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  position: relative;\r\n  margin-bottom: 8px;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  &:hover ${Rating} {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 12px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/ReactRouterTest/movie/${id}` : `/ReactRouterTest/tv/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPosterSmall.png\")} />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 15 ? `${title.substring(0, 15)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.prppTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  year: PropTypes.string.isRequired,\r\n  isMovie: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Section from \"Compornents/Section\";\r\nimport Loader from \"Compornents/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport { containerStyle, cellStyle } from \"Compornents/StyledMixin\";\r\nimport Message from \"Compornents/Message\";\r\nimport Poster from \"../../Compornents/Poster\";\r\n\r\nconst Container = containerStyle;\r\n\r\nconst Cell = cellStyle;\r\n\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, loading, error }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Movies | Nomflix</title>\r\n      </Helmet>\r\n      {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n          {nowPlaying.map(\r\n            ({\r\n              id,\r\n              poster_path,\r\n              original_title,\r\n              vote_average,\r\n              release_date\r\n            }) => (\r\n              <Poster\r\n                key={id}\r\n                id={id}\r\n                imageUrl={poster_path}\r\n                title={original_title}\r\n                rating={vote_average}\r\n                year={release_date.split(\"-\")[0]}\r\n                isMovie={true}\r\n              ></Poster>\r\n            )\r\n          )}\r\n        </Section>\r\n      )}\r\n      {upComing && upComing.length > 0 && (\r\n        <Section title=\"UpComing Movies\">\r\n          {upComing.map(\r\n            ({\r\n              id,\r\n              poster_path,\r\n              original_title,\r\n              vote_average,\r\n              release_date\r\n            }) => (\r\n              <Poster\r\n                key={id}\r\n                id={id}\r\n                imageUrl={poster_path}\r\n                title={original_title}\r\n                rating={vote_average}\r\n                year={release_date.split(\"-\")[0]}\r\n                isMovie={true}\r\n              ></Poster>\r\n            )\r\n          )}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Movies\">\r\n          {popular.map(\r\n            ({\r\n              id,\r\n              poster_path,\r\n              original_title,\r\n              vote_average,\r\n              release_date\r\n            }) => (\r\n              <Poster\r\n                key={id}\r\n                id={id}\r\n                imageUrl={poster_path}\r\n                title={original_title}\r\n                rating={vote_average}\r\n                year={release_date.split(\"-\")[0]}\r\n                isMovie={true}\r\n              ></Poster>\r\n            )\r\n          )}\r\n        </Section>\r\n      )}\r\n      {error && <Message text={error} color=\"#dbdbdb\" />}\r\n    </Container>\r\n  );\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"6fefd2b81af86bf25c213d3309e48bc4\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upComing: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        appends_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  popular: () => api.get(\"/tv/popular\"),\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  tvShowDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        appends_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upComing: null,\r\n    popular: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n\r\n      const {\r\n        data: { results: upComing }\r\n      } = await moviesApi.upComing();\r\n\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      \r\n      this.setState({\r\n        nowPlaying,\r\n        upComing,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't Find Movies Infomation.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upComing, popular, loading, error } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upComing={upComing}\r\n        popular={popular}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Section from \"Compornents/Section\";\r\nimport Loader from \"Compornents/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport { containerStyle, cellStyle } from \"Compornents/StyledMixin\";\r\nimport Message from \"Compornents/Message\";\r\nimport Poster from \"Compornents/Poster\";\r\n\r\nconst Container = containerStyle;\r\n\r\nconst Cell = cellStyle;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>TV Shows | Nomflix</title>\r\n      </Helmet>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"Top Rated Shows\">\r\n          {topRated.map(\r\n            ({ id, poster_path, name, vote_average, first_air_date }) => (\r\n              <Poster\r\n                key={id}\r\n                id={id}\r\n                imageUrl={poster_path}\r\n                title={name}\r\n                rating={vote_average}\r\n                year={first_air_date.split(\"-\")[0]}\r\n              ></Poster>\r\n            )\r\n          )}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Shows\">\r\n          {popular.map(\r\n            ({ id, poster_path, name, vote_average, first_air_date }) => (\r\n              <Poster\r\n                key={id}\r\n                id={id}\r\n                imageUrl={poster_path}\r\n                title={name}\r\n                rating={vote_average}\r\n                year={first_air_date.split(\"-\")[0]}\r\n              ></Poster>\r\n            )\r\n          )}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"Airing Today Shows\">\r\n          {airingToday.map(\r\n            ({ id, poster_path, name, vote_average, first_air_date }) => (\r\n              <Poster\r\n                key={id}\r\n                id={id}\r\n                imageUrl={poster_path}\r\n                title={name}\r\n                rating={vote_average}\r\n                year={first_air_date.split(\"-\")[0]}\r\n              ></Poster>\r\n            )\r\n          )}\r\n        </Section>\r\n      )}\r\n      {error && <Message text={error} color=\"#95a5a6\" />}\r\n    </Container>\r\n  );\r\n\r\nTVPresenter.propTypes = {\r\n  popular: PropTypes.array,\r\n  topRated: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    popular: null,\r\n    topRated: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n\r\n      this.setState({\r\n        popular,\r\n        topRated,\r\n        airingToday\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't Find Movies Infomation.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { popular, topRated, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        popular={popular}\r\n        topRated={topRated}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport { containerStyle } from \"Compornents/StyledMixin\";\r\nimport Loader from \"Compornents/Loader\";\r\nimport Section from \"Compornents/Section\";\r\nimport Message from \"Compornents/Message\";\r\nimport Poster from \"Compornents/Poster\";\r\n\r\nconst Container = containerStyle;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 30px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  handleSubmit,\r\n  loading,\r\n  error,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or Tv Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      ></Input>\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(\r\n              ({\r\n                id,\r\n                poster_path,\r\n                original_title,\r\n                vote_average,\r\n                release_date\r\n              }) => (\r\n                <Poster\r\n                  key={id}\r\n                  id={id}\r\n                  imageUrl={poster_path}\r\n                  title={original_title}\r\n                  rating={vote_average}\r\n                  year={release_date && release_date.split(\"-\")[0]}\r\n                  isMovie={true}\r\n                ></Poster>\r\n              )\r\n            )}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map(\r\n              ({ id, poster_path, name, vote_average, first_air_date }) => (\r\n                <Poster\r\n                  key={id}\r\n                  id={id}\r\n                  imageUrl={poster_path}\r\n                  title={name}\r\n                  rating={vote_average}\r\n                  year={first_air_date && first_air_date.split(\"-\")[0]}\r\n                ></Poster>\r\n              )\r\n            )}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#95a5a6\" />}\r\n        {movieResults && tvResults && movieResults < 1 && tvResults < 1 && (\r\n          <Message text={`Nothing Found`} color=\"#95a5a6\" />\r\n        )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  updateTerm: PropTypes.func\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi } from \"api\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't Find Movies Infomation.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Compornents/Loader\";\r\nimport Message from \"Compornents/Message\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 80px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: -30px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: calc(100% + 30px);\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center;\r\n  background-size: cover;\r\n  filter: blur(5px);\r\n  opacity: 0.5;\r\n  z-index: -1;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  padding-top: 42.428%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span`\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Devider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  font-size: 16px;\r\n  opacity: 0.7;\r\n  line-height: 1.8;\r\n  width: 50%;\r\n`;\r\n\r\nconst DefaultPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <Loader></Loader>\r\n  ) : error ? <Message text={error} color=\"#95a5a6\" /> : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title\r\n            ? result.original_title\r\n            : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/w300${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/w500${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        ></Cover>\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Devider>·</Devider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Devider>·</Devider>\r\n            <Item>\r\n              {result.imdb_id ? `${result.imdb_id}` : \"Not Link\"}\r\n            </Item>\r\n            <Devider>·</Devider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map(\r\n                  (genre, index) =>\r\n                    `${genre.name}${\r\n                      index === result.genres.length - 1 ? \"\" : \" / \"\r\n                    }`\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview && result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDefaultPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DefaultPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n      isMovie: pathname.includes(\"/movie\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n\r\n    const { isMovie } = this.state;\r\n\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result = null;\r\n    try {\r\n      ({ data: result } = isMovie\r\n        ? await moviesApi.movieDetail(parsedId)\r\n        : await tvApi.tvShowDetail(parsedId));\r\n    } catch {\r\n      this.setState({ error: \"Can't Find Movies Infomation.\" });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n        result\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, loading, error } = this.state;\r\n    return <DetailPresenter result={result} loading={loading} error={error} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Header from \"Compornents/Header\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/ReactRouterTest/\" exact component={Home} />\r\n        <Route path=\"/ReactRouterTest/tv\" exact component={TV} />\r\n        <Route path=\"/ReactRouterTest/search\" component={Search} />\r\n        <Route path=\"/ReactRouterTest/movie/:id\" component={Detail}/>\r\n        <Route path=\"/ReactRouterTest/tv/:id\" component={Detail}/>\r\n        <Redirect from=\"*\" to=\"/ReactRouterTest\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import {createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    @import url('https://fonts.googleapis.com/css?family=Nanum+Gothic:400,700&display=swap');\r\n    a{\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    *{\r\n        box-sizing: border-box;\r\n    }\r\n    body{\r\n        font-family: 'Nanum Gothic', sans-serif;\r\n        font-size: 12px;\r\n        background-color: rgba(20,20,20,1);\r\n        color: white;\r\n        padding-top: 80px;\r\n    }\r\n`\r\n\r\nexport default globalStyles;","import React from \"react\";\r\nimport Router from \"Compornents/Router\";\r\nimport GlobalStyles from \"Compornents/GlobalStyles\"\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router />\r\n      <GlobalStyles />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'Compornents/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}